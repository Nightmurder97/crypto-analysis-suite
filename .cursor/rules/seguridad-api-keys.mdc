---
description: Protocolo estricto para manejo de claves API - NUNCA exponer claves completas
alwaysApply: true
---

# SEGURIDAD CR√çTICA - MANEJO DE CLAVES API

## REGLA FUNDAMENTAL: NUNCA EXPONER CLAVES COMPLETAS

### ‚ùå PROHIBIDO ABSOLUTAMENTE
- `cat .env` sin filtrar
- `grep API_KEY` sin enmascarar
- `echo $API_KEY` directo
- Mostrar claves en comandos de terminal
- Incluir claves en documentaci√≥n (ni como ejemplo)

### ‚úÖ PROTOCOLO SEGURO OBLIGATORIO

#### Para Exportar Variables de Entorno:
```bash
# M√âTODO CORRECTO:
source .env
export GEMINI_API_KEY=$VITE_GEMINI_API_KEY

# VERIFICACI√ìN SEGURA:
echo "Clave configurada - Terminaci√≥n: ****${GEMINI_API_KEY: -4}"
```

#### Para Verificaci√≥n:
- Solo mostrar **4 √∫ltimos caracteres**: `${VAR: -4}`
- Usar enmascarado: `****xxxx`
- Nunca mostrar m√°s de 4 caracteres finales

#### Para Documentaci√≥n:
- Usar placeholders: `[CLAVE_OCULTA]`
- Usar ejemplos gen√©ricos: `TU_CLAVE_AQUI`
- Nunca claves reales, ni en contexto de "ejemplo"

### üö® PROTOCOLO DE EMERGENCIA

Si se expone accidentalmente una clave:
1. Regenerar inmediatamente en proveedor
2. Actualizar .env con nueva clave
3. Documentar incidente con clave enmascarada
4. Verificar logs de uso no autorizado

### üìã CHECKLIST PRE-COMANDO

Antes de cualquier comando con variables de entorno:
- [ ] ¬øEl comando mostrar√° la clave completa?
- [ ] ¬øEstoy usando el m√©todo de verificaci√≥n seguro?
- [ ] ¬øHe enmascarado todas las claves en la documentaci√≥n?

**RECORDATORIO**: Doble incidente en crypto-analysis-suite demostr√≥ criticidad de este protocolo.
